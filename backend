BACKEND CODE â€” backend/server.js
// backend/server.js
const express = require("express");
const fs = require("fs");
const cors = require("cors");
const app = express();
const PORT = 4000;

// Middleware
app.use(cors());
app.use(express.json());

// Read data from file
function readData() {
  return JSON.parse(fs.readFileSync("backend/data.json", "utf8"));
}

// Write data to file
function writeData(data) {
  fs.writeFileSync("backend/data.json", JSON.stringify(data, null, 2));
}

// Get all job applications
app.get("/api/jobs", (req, res) => {
  const data = readData();
  res.json(data.jobs);
});

// Add new job
app.post("/api/jobs", (req, res) => {
  const data = readData();
  const newJob = {
    id: data.jobs.length + 1,
    title: req.body.title,
    company: req.body.company,
    status: req.body.status || "Applied",
  };
  data.jobs.push(newJob);
  writeData(data);
  res.status(201).json(newJob);
});

// Update job
app.put("/api/jobs/:id", (req, res) => {
  const data = readData();
  const job = data.jobs.find((j) => j.id == req.params.id);
  if (!job) return res.status(404).json({ error: "Job not found" });

  job.status = req.body.status || job.status;
  writeData(data);
  res.json(job);
});

// Delete job
app.delete("/api/jobs/:id", (req, res) => {
  const data = readData();
  data.jobs = data.jobs.filter((j) => j.id != req.params.id);
  writeData(data);
  res.json({ message: "Deleted successfully" });
});

app.listen(PORT, () => console.log(`Backend running on port ${PORT}`));
